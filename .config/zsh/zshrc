#!/bin/zsh

umask 022

# if it's a dumb terminal, return.
if [[ ${TERM} == 'dumb' ]]; then
    return
fi
[[ $- =~ i ]] || return

# Use emacs keybindings even if our EDITOR is set to vi
bindkey -e

# Def
setopt extendedglob kshglob
setopt nullglob
setopt interactivecomments

# Why in the world is this enabled by default on Linux? zgen?
zmodload -i zsh/stat
disable stat

# enable all of the highlighters
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern cursor root line)

# secrets
source-with-force ~/.zsh/secrets

# zplug
: ${ZPLUG_HOME:=$XDG_CACHE_HOME/zplug}
: ${ZPLUG_CACHE_FILE:=$ZPLUG_HOME/.cache}
: ${ZPLUG_REPOS:=$ZPLUG_HOME/repos}
: ${ZPLUG_CLONE_DEPTH:=1}

# Reset zplugs
zplugs=()

: ${ZPLUG_DIR:=$ZPLUG_REPOS/zplug/zplug}
: ${ZPLUG_REPO:=https://github.com/akatrevorjay/zplug.git}

if [[ ! -d $ZPLUG_DIR ]]; then
    echo "- No zplug found in ZPLUG_DIR=$ZPLUG_DIR" >&2

    echo "- Cloning zplug into ZPLUG_DIR=$ZPLUG_DIR" >&2
    if ! git clone $ZPLUG_REPO $ZPLUG_DIR; then
        echo "- Failed." >&2
        return 1
    fi
fi

source $ZPLUG_DIR/init.zsh || return 1

function zplug() {
    # Replace self. Lazy loading.
    unfunction zplug
    autoload -Uz zplug

    # TODO check plugins difference on hook and auto-load
    source-with-force ${^ZDOTDIRS}/zshplugins(-.)
}

function zplugins-cache-is-clean() {
    if [ ! -f $ZPLUG_CACHE_FILE ]; then
        echo "- Cache file not found: $ZPLUG_CACHE_FILE" >&2
        return 1
    fi

    local plugins_file
    for plugins_file in ${^ZDOTDIRS}/zshplugins(-.); do
        if [ $plugins_file -nt $ZPLUG_CACHE_FILE ]; then
            echo "- Detected change in $plugins_file" >&2
            return 100
        fi
    done
}

if zplugins-cache-is-clean; then
    echo "- Loading cache"
    source $ZPLUG_CACHE_FILE
else
    echo "- Creating cache"

    if ! zplug check --verbose; then
	    printf "-- Found changes in zshplugins. Install them? [y/N]: "
        if read -q; then
            echo; zplug install
        fi
    fi

    zplug load --verbose
fi

# Set up the prompt
case "$USERNAME" in
	root)
		autoload -Uz promptinit
		promptinit
		prompt walters
		;;
	*) source "$ZDOTDIR/themes/airline2.zsh" ;;
esac

# local
# TODO Move to $XDG local path
source-with-force $LOCAL_ZDOTDIR/zshrc

# This is annoying to have earlier.
#setopt warncreateglobal
