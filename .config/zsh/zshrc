#!/bin/zsh

umask 022

# if it's a dumb terminal, return.
if [[ ${TERM} == 'dumb' ]]; then
	return
fi
[[ $- =~ i ]] || return

# Use emacs keybindings even if our EDITOR is set to vi
bindkey -e

# enable all of the highlighters
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern cursor root)

# secrets
source-with-force ~/.zsh/secrets

# Set up the prompt
autoload -Uz ztheme; ztheme

if [[ -z $ZSH_CACHE_DIR ]]; then
	echo "- ZSH_CACHE_DIR is not set?" >&2
	return 1
elif [[ ! -e $ZSH_CACHE_DIR ]]; then
	mkdir -pv $ZSH_CACHE_DIR
fi

: ${ZPLUG_HOME:=$XDG_CACHE_HOME/zplug}
: ${ZPLUG_CACHE_DIR:=$ZPLUG_HOME/.cache}
: ${ZPLUG_REPOS:=$ZPLUG_HOME/repos}
zstyle :zplug:tag depth 1

: ${ZPLUG_DIR:=$ZPLUG_REPOS/zplug/zplug}
: ${ZPLUG_REPO:=https://github.com/zplug/zplug.git}

ZPLUGINS_CHECK=($ZPLUG_CACHE_DIR(-/N))
ZPLUGINS_FILES=(${^ZDOTDIRS}/zshplugins(-.N))

# Reset zplugs
typeset -a zplug_q=()
typeset -A zplugs=()

# Stub zplug that just queues the commands for later
function zplugins.zplug.stub() {
	set -- zplug "$@"
	zplug_q+=("${(q)@}" $'\0')
}

function zplug() {
	zplugins.zplug.stub "$@"
}

function zplugins.load-all-in() {
	local p

	local paths=()
	for p in "$@"; do
		if [[ ${p:0:1} == / ]]; then
			paths+=($p(-/N))
		else
			paths+=(${^ZDOTDIRS}/$p(-/N))
		fi
	done

	local defer
	for p in ${^paths}/*(-/N); do
		defer=${${p:t}%%[^0-9]*}
		if [[ -n $defer ]]; then
			defer=$defer
		else
			defer=0
		fi

		zplug "$p", from:local, defer:$defer
	done
}

# TODO check plugins difference on hook and auto-load
source-with-force $ZPLUGINS_FILES

# Install zplug if we don't have it.
if [[ ! -d $ZPLUG_DIR ]]; then
	echo "- No zplug found in ZPLUG_DIR=$ZPLUG_DIR" >&2

	echo "- Cloning zplug into ZPLUG_DIR=$ZPLUG_DIR" >&2
	if ! git clone $ZPLUG_REPO $ZPLUG_DIR; then
		echo "- Failed." >&2
		return 1
	fi
fi

function zplugins.zplug.apply {
	# Run through zplug_q
	#local ZPLUG_LOADFILE=/dev/null

	local p
	for p in ${(0)zplug_q}; do
		p=(${(Z+Cn+)p})

		"${(@)p}"
	done
}

function zplugins.zplug.lazy {
	unfunction zplug
	source $ZPLUG_REPOS/zplug/zplug/init.zsh

	zplugins.zplug.apply

	zplug "$@"
}

function zplug() {
	zplugins.zplug.lazy "$@"
}

function max() {
	local sorted=(${(n)argv})
	[[ $#sorted -eq 0 ]] \
		|| echo ${sorted[-1]}
}

function min() {
	local sorted=(${(n)argv})
	[[ $#sorted -eq 0 ]] \
		|| echo ${sorted[1]}
}

function zplugins.cache.is-clean() {
	if [ ! -d $ZPLUG_CACHE_DIR ]; then
		echo "- Cache dir not found: $ZPLUG_CACHE_DIR" >&2
		return 1
	fi

	if [[ ${#ZPLUGINS_FILES} -eq 0 ]] || [[ ${#ZPLUGINS_CHECK} -eq 0 ]]; then
		echo "- No files found to check cache mtimes: ($ZPLUGINS_CHECK) ($ZPLUGINS_FILES)" >&2
		return 2
	fi

	local files_mtime=$(max $(zstat -N +mtime $ZPLUGINS_FILES))
	local check_mtime=$(max $(zstat -N +mtime $ZPLUGINS_CHECK))
	if [[ $files_mtime -gt $check_mtime ]]; then
		echo "- Detected change in plugins: $files_mtime $check_mtime" >&2
		return 100
	fi
}

if zplugins.cache.is-clean; then
	zplug load
else
	echo "- Creating cache (may take a second)"
	zplug clear

	if ! zplug check --verbose; then
		printf -- "-- Found changes in zshplugins. Install them? [y/N]: "
		if read -q; then
			echo; zplug install
		fi
	fi

	zplug load --verbose
fi

# local
source-with-force $LOCAL_ZDOTDIR/zshrc

# This is annoying to have earlier.
#setopt warncreateglobal

autoload -Uz fix-{f,}path-order
fix-path-order
fix-fpath-order

